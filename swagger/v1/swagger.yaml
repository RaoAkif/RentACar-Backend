---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  schemas:
    errors_object:
      type: object
      properties:
        errors:
          "$ref": "#/components/schemas/errors_map"
    errors_map:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    car:
      type: object
      properties:
        name:
          type: string
        model:
          type: string
        desc:
          type: string
        image:
          type: string
        rent:
          type: number
      required:
      - name
      - model
      - desc
      - image
      - rent
paths:
  "/api/v1/cars":
    get:
      summary: list cars
      tags:
      - Cars
      responses:
        '200':
          description: successful
    post:
      summary: create car
      tags:
      - Cars
      parameters: []
      responses:
        '201':
          description: car created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                model:
                  type: string
                desc:
                  type: string
                image:
                  type: string
                rent:
                  type: number
              required:
              - name
              - model
              - desc
              - image
              - rent
  "/api/v1/cars/{id}/edit":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: edit car
      tags:
      - Cars
      responses:
        '200':
          description: successful
  "/api/v1/cars/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show car
      tags:
      - Cars
      responses:
        '200':
          description: successful
    patch:
      summary: update car
      tags:
      - Cars
      responses:
        '200':
          description: successful
    put:
      summary: update car
      tags:
      - Cars
      responses:
        '200':
          description: successful
    delete:
      summary: delete car
      tags:
      - Cars
      responses:
        '200':
          description: successful
  "/api/v1/users/{user_id}/reservations":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: list reservations
      tags:
      - Reservation
      responses:
        '200':
          description: successful
    post:
      summary: create reservation
      tags:
      - Reservation
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                city:
                  type: string
                date:
                  type: string
                car_id:
                  type: number
              required:
              - city
              - date
              - car_id
  "/api/v1/users/{user_id}/reservations/{id}/edit":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: edit reservation
      tags:
      - Reservation
      responses:
        '200':
          description: successful
  "/api/v1/users/{user_id}/reservations/{id}":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show reservation
      tags:
      - Reservation
      responses:
        '200':
          description: successful
    patch:
      summary: update reservation
      tags:
      - Reservation
      responses:
        '200':
          description: successful
    put:
      summary: update reservation
      tags:
      - Reservation
      responses:
        '200':
          description: successful
    delete:
      summary: delete reservation
      tags:
      - Reservation
      responses:
        '200':
          description: successful
  "/api/v1/sign_in":
    post:
      summary: sign_in user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/users":
    get:
      summary: list users
      tags:
      - Users
      responses:
        '200':
          description: successful
    post:
      summary: create user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - Users
      responses:
        '200':
          description: successful
    delete:
      summary: delete user
      tags:
      - Users
      responses:
        '200':
          description: successful
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
